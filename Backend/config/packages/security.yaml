security:
  password_hashers:
    App\Entity\User:
      algorithm: auto
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: auto

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    # Firewall principal pour l'API
    main:
      pattern: ^/api
      stateless: true
      provider: app_user_provider

      # Login JSON â†’ /api/signin
      json_login:
        check_path: /api/signin
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

      # Authentification par JWT pour le reste
      jwt: ~

  access_control:
    # âœ… PrÃ©flight CORS
    - { path: ^/api, methods: [OPTIONS], roles: PUBLIC_ACCESS }

    # âœ… Endpoints publics
    - { path: ^/api/signup,       roles: PUBLIC_ACCESS }
    - { path: ^/api/signin,       roles: PUBLIC_ACCESS }
    - { path: ^/api/check-email,  roles: PUBLIC_ACCESS }
    - { path: ^/api/check-pseudo, roles: PUBLIC_ACCESS }
    - { path: ^/api/trajets/\d+$, roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/api/trajets$,     roles: PUBLIC_ACCESS, methods: [GET] }

    # ðŸ”’ Admin
    - { path: ^/api/admin, roles: ROLE_ADMIN }

    # ðŸ”’ Tout le reste requiert un JWT
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
